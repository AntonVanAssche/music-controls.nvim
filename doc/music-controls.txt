*music-controls*  Control your favorite music players with ease.

Minimum version of Neovim: nightly

Author(s):
  Anton Van Assche <https://github.com/AntonVanAssche/>

                                                        Table of Contents: gO
===============================================================================
INTRODUCTION                                             *music-controls-intro*

Music Controls provides an intuitive way to control music players directly
from Neovim. Whether youâ€™re managing playlists or adjusting volume, this
plugin integrates seamlessly with your workflow to keep you in the zone.

===============================================================================
COMMANDS                                              *music-controls-commands*

                                                                    *:MPlayers*
:MPlayers

Display a list of all available players.

                                                                       *:MPlay*
:MPlay {player}

Toggle play/pause for the currently playing track.

- {player} Name of the player to use.

                                                                      *:MPause*
:MPause {player}

Pause the current track.

- {player} Name of the player to use.

                                                                      *:MNext*
:MNext {player} {amount}

Play the next track.

- {player} Name of the player to use.
- {amount} Number of tracks to skip (default: 1).

                                                                       *:MPrev*
:MPrev {player} {amount}

Play the previous track.

- {player} Name of the player to use.
- {amount} Number of tracks to go back (default: 1).

                                                                    *:MCurrent*
:MCurrent {player}

Display the current track playing.

- {player} Name of the player to use.

                                                                    *:MShuffle*
:MShuffle {player}

Toggle shuffle mode.

- {player} Name of the player to use.

                                                                       *:MLoop*
:MLoop {player} {mode}

Set the loop mode.

- {player} Name of the player to use.
- {mode}   Loop mode, one of:
  - `Track`     (Default)
  - `None`
  - `Playlist`

                                                                 *:MLoopToggle*
:MLoopToggle {player}

Toggle loop mode between `None` and `Track`.

                                                                  *:MVolumeGet*
:MVolumeGet {player}

Display the current volume as a percentage.

- {player} Name of the player to use.

                                                                  *:MVolumeSet*
:MVolumeSet {player} {volume}

Set the volume to a specific value.

- {player} Name of the player to use.
- {volume} Volume as a float between 0 and 1.

===============================================================================
DEPRECATIONS                                      *music-controls-deprecations*

The following commands have been marked as deprecated and will be removed in
future versions of the plugin. Please update your configuration to use the
new commands.

`:MusicListPlayers`          Superseded by `:MPlayers`
`:MusicPlay`                 Superseded by `:MPlay`
`:MusicPause`                Superseded by `:MPause`
`:MusicNext`                 Superseded by `:MNext`
`:MusicPrev`                 Superseded by `:MPrev`
`:MusicCurrent`              Superseded by `:MCurrent`
`:MusicShuffle`              Superseded by `:MShuffle`
`:MusicLoop`                 Superseded by `:MLoop`
`:MusicLoopToggle`           Superseded by `:MLoopToggle`
`:MusicVolumeGet`            Superseded by `:MVolumeGet`
`:MusicVolumeSet`            Superseded by `:MVolumeSet`

===============================================================================
CONFIGURATION                                    *music-controls-configuration*

                                         *music-controls-configuration-options*
CONFIGURATION OPTIONS

Music Controls requires minimal configuration. However, you can set a
default player for convenience.

Default configuration:

>
  {
    default_player = nil, -- Set the default player (e.g., "spotify").
  }
<

                                           *music-controls-configuration-setup*
CONFIGURATION SETUP

To configure the default player, add the following to your Neovim setup:

>
  require('music-controls').setup {
    default_player = 'spotify',
  }
<

This setup ensures commands like `:MPlay` automatically target the specified
default player without requiring you to specify the player each time.

                             *music-controls-configuration-recommended-keymaps*
CONFIGURATION RECOMMENDED KEYMAPS

This plugin does not include default keymaps. Below are recommended keymaps:

>
  local map = vim.api.nvim_set_keymap
  local opts = { noremap = true, silent = true }
  map('n', '<leader>mp', ':MPlay<CR>', opts)
  map('n', '<leader>mn', ':MNext<CR>', opts)
  map('n', '<leader>mp', ':MPrev<CR>', opts)
  map('n', '<leader>mc', ':MCurrent<CR>', opts)
  map('n', '<leader>ms', ':MShuffle<CR>', opts)
  map('n', '<leader>ml', ':MSLoopToggle<CR>', opts)
<

===============================================================================
STATUSLINE INTEGRATION                  *music-controls-statusline-integration*

Music Controls integrates with statusline plugins such as `lualine` or
`galaxyline`. Below is an example of integrating with `lualine`:

>
  require('lualine').setup {
    sections = {
      lualine_x = { require('music-controls')._statusline },
    }
  }
<

This integration requires a `default_player` to be configured. Refer to the
statusline plugin's documentation for additional setup options.

===============================================================================
vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
